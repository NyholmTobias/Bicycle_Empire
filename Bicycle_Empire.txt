-- Skapar databasen.
CREATE DATABASE Bicycle_Empire;

-- Skapar tabellerna i databasen.
CREATE TABLE Rental_Prices(
	price_category int IDENTITY(1, 1),
	hour_price decimal NOT NULL,
	day_price decimal NOT NULL,
	PRIMARY KEY(price_category)
);

CREATE TABLE Bicycles(
	bicycle_id int IDENTITY(1, 1),
	price_category int,
	rental_status NVARCHAR(50) NOT NULL CHECK('Vacant' OR 'Rented') DEFAULT('VACANT'),
	model NVARCHAR(50),
	PRIMARY KEY(bicycle_id),
	FOREIGN KEY (price_category) REFERENCES Rental_Prices(price_category)
);

CREATE TABLE Customers(
	customer_id int IDENTITY(1, 1),
	first_name NVARCHAR(25) NOT NULL,
	last_name NVARCHAR(25) NOT NULL,
	PRIMARY KEY(customer_id)
);

CREATE TABLE Rental_Orders(
	order_number int IDENTITY(1, 1),
	start_date datetime NOT NULL,
	return_date datetime NOT NULL CHECK(Rental_Orders.return_date > Rental_Orders.start_date),
	customer_id int,
	bicycle_id int,
	PRIMARY KEY(order_number),
	FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),
	FOREIGN KEY (bicycle_id) REFERENCES Bicycles(bicycle_id)
);

CREATE TABLE Invoice_Info(
	invoice_number int IDENTITY(1, 1),
	invoice_adress NVARCHAR(50) NOT NULL,
	c/o_adress NVARCHAR(50),
	postal_number int(5) NOT NULL,
	city NVARCHAR(50) NOT NULL,
	order_number int,
	customer_id int,
	PRIMARY KEY(invoice_number),
	FOREIGN KEY (order_number) REFERENCES Rental_Orders(order_number),
	FOREIGN KEY (customer_id) REFERENCES Customers(customer_id),
);

-- Flyller i Rental_Prices tabellen.
INSERT INTO Rental_Prices(
	hour_price,
	day_price
)
VALUES(
	100,
	2000,
);

INSERT INTO Rental_Prices(
	hour_price,
	day_price
)
VALUES(
	100,
	2000,
);

INSERT INTO Rental_Prices(
	hour_price,
	day_price
)
VALUES(
	120,
	2200,
);

INSERT INTO Rental_Prices(
	hour_price,
	day_price
)
VALUES(
	130,
	2300,
);

INSERT INTO Rental_Prices(
	hour_price,
	day_price
)
VALUES(
	140,
	2400,
);

-- Flyller i Bicycles tabellen.
INSERT INTO Bicycles(
	price_category,
	rental_status,
	model		
)
VALUES(
	1,
	'Vacant',
	'Trek',
);

INSERT INTO Bicycles(
	price_category,
	rental_status,
	model		
)
VALUES(
	2,
	'Vacant',
	'Colnago',
);

INSERT INTO Bicycles(
	price_category,
	rental_status,
	model		
)
VALUES(
	3,
	'Rented',
	'Raleigh',
);

INSERT INTO Bicycles(
	price_category,
	rental_status,
	model		
)
VALUES(
	4,
	'Rented',
	'Cervelo',
);

INSERT INTO Bicycles(
	price_category,
	rental_status,
	model		
)
VALUES(
	5,
	'Vacant',
	'BMC',
);
-- Flyller i Customers tabellen.
INSERT INTO Customers(
	first_name,
	last_name
)
VALUES(
	'Tobias',
	'Nyholm'
);

INSERT INTO Customers(
	first_name,
	last_name
)
VALUES(
	'Oliver',
	'Stenström'
);

INSERT INTO Customers(
	first_name,
	last_name
)
VALUES(
	'Kevin',
	'Dani'
);

INSERT INTO Customers(
	first_name,
	last_name
)
VALUES(
	'Erik',
	'Niklasson'
);

INSERT INTO Customers(
	first_name,
	last_name
)
VALUES(
	'Pontus',
	'Haglund'
);

-- Flyller i Rental_Orders tabellen.
INSERT INTO Rental_Orders(
	start_date,
	return_date,
	customer_id,
	bicycle_id
)
VALUES(
	2021-03-17 09:23:00
	2021-03-17 10:23:00
	1,
	1,	
);

INSERT INTO Rental_Orders(
	start_date,
	return_date,
	customer_id,
	bicycle_id
)
VALUES(
	2021-03-17 09:23:00
	2021-04-17 09:23:00
	2,
	2,	
);

INSERT INTO Rental_Orders(
	start_date,
	return_date,
	customer_id,
	bicycle_id
)
VALUES(
	2021-03-21 09:23:00
	2021-03-29 09:23:00
	3,
	3,	
);

INSERT INTO Rental_Orders(
	start_date,
	return_date,
	customer_id,
	bicycle_id
)
VALUES(
	2021-03-17 09:23:00
	2021-03-17 10:23:00
	4,
	4,	
);

INSERT INTO Rental_Orders(
	start_date,
	return_date,
	customer_id,
	bicycle_id
)
VALUES(
	2021-03-19 16:23:00
	2021-03-19 18:23:00
	5,
	5,	
);

-- Flyller i Invoice_Info tabellen.
INSERT INTO Invoice_Info(
	invoice_adress,
	c/o_adress,
	postal_number,
	city,
	order_number,
	customer_id,
)
VALUES(
	'Lärdomsgatan 9',
	'LGH 1011',
	41756,
	'Göteborg',
	1,
	1,	
);

INSERT INTO Invoice_Info(
	invoice_adress,
	c/o_adress,
	postal_number,
	city,
	order_number,
	customer_id,
)
VALUES(
	'Byshan 1',
	'Den ute på gården',
	41955,
	'Göteborg',
	2,
	2,	
);

INSERT INTO Invoice_Info(
	invoice_adress,
	c/o_adress,
	postal_number,
	city,
	order_number,
	customer_id,
)
VALUES(
	'Högsätragatan 5',
	'Lyssna efter hunden.',
	46532,
	'Högsätra',
	3,
	3,	
);

-- Denna har ingen C/O adress för att påvisa att det inte behövs.
INSERT INTO Invoice_Info(
	invoice_adress,
	postal_number,
	city,
	order_number,
	customer_id,
)
VALUES(
	'Bilbovägen 56',
	41889,
	'Fylke'
	4,
	4,	
);

INSERT INTO Invoice_Info(
	invoice_adress,
	c/o_adress,
	postal_number,
	city,
	order_number,
	customer_id,
)
VALUES(
	'Storgatan 6',
	'Baksidan'	
	41889,
	'Helsingborg',
	5,
	5,	
);